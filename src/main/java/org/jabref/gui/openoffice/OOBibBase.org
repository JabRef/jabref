* Notes for OOBibBase.java

- file:../../logic/openoffice/
- file:../../gui/openoffice/
- file:../../../../../resources/l10n/JabRef_en.properties

** Bug: two-column numbering                              :orderOfAppearance:

Citations are numbered in top-down left-to-right order even in
two-column layout.

Surprisingly: even with *single column layout*, but viewing in
two-pages side-by-side mode, citations are numbered in top-down
left-to-right order as seen on the screen: citations in the top half
of the 2nd page get before citations in the bottom half of the 1st
page.


Consequences:

- citations higher in the 2nd column get lower numbers than those at
  the bottom of the first.


*** The problem behind

The main text can contain several XTextContent kinds,
for example footnotes, frames. It is not always clear where should we
insert their content into the firstAppearance order.

Footnotes are already handled specially and their content is
considered to be at the location of the footnote mark.

Frames however can be anchored in several ways, with multiple options
for wrapping. The question is: how to decide where the content of a
frame should reside in firstAppearance order.

The current solution (visual top-down left-to-right) gives an answer
to this, but is arguably wrong with multi-column layout.

Ideas:

- LibreOffice already has a solution to this numbering question. Can
  we reuse their solution?

  What does LibreOffice do?

  - Multicolumn handled
  - Citation in figure caption: [0] unless citation to the same source
    also appears in the text.
  - Citation in footnote: ...


*** related

- "Trying to understand Anchors (XTextRange)"
  https://forum.openoffice.org/en/forum/viewtopic.php?f=25&t=82792&hilit=xtextviewcursor
  Discussion on how to linearize OO doc content.
  - It ends with XTextViewCursor




** Question: can we make LO to protect our ranges?

   Note: protected in the sense that their content should not be changed.
   We allow deletion, move, copy (if we can).

   - TextField: OO/LO has several variants of text fields,
     inserting content from somewhere else (variables, reference mark ...).

     - good: these behave as a unit, no insert inside

     - bad: no formatting inside
       - Even a TextField repeating text from a reference mark or title
         does not allow e.g. "H<sub>2</sub>O" or other formatting.

   - hyperlink
     - interestingly, can be inserted into a TextBox.
       There, it behaves like a TextField (single unit, no formatting)

** Question: can we check if an XTextRange contains an anchor?

** feature or bug? : Manage citations creates empty pageInfo fields :storage:

"Manage citations" creates empty pageInfo fields for citation groups
with no pageInfo.

- good: If the user knows where to find these, then can edit them
  without having to construct or reproduce the property name.
- bad: Since we do not cleanup unused properties, ...

** doc: pageInfo with numbered style                          :documentation:

   - [ ] Documentation should probably warn: for numbered citations
     the reader cannot distinguish [1; 15] as in citing [1] and [15]
     from [1] with pageInfo "15".

   - [ ] Shall we document ?

     - Page infos ("Extra information" under "Cite special") are
       stored under [File]/[Properies]/[Custom properties]

     - Delayed: Wait for storage decisions.

** Question: what can go into pageInfo?                             :storage:
   - (a) page numbers, page ranges
     - Q: format?
     - Q: extra "pp." added? If so, how to customize this?
     - good: might attempt to merge when the same source appears twice in a citation group.
     - bad: may be unnecessarily complicated
   - (b) any text
     - Need to warn user when the same source appears twice in a
       citation group, and offer a way to merge them by hand.
     - good: less restrictive (and less surprising) for the user

     - Note: as we stand now, "The chapter on H<sub>2</sub>O" does not
       fit in, although it could be done.
       - The the next question: can ask the user to type "<sub>2</sub>",
         or shall we offer a GUI instead? If so: how?

** Question: visualSort can we get XTextViewCursor when user is in a comment? 

   Can we do something to get an XTextViewCursor, to cover the case when
   the user left the cursor in a comment?
.
** bug: frame anchored to a character of our reference mark is killed

   - (a) A frame anchored to a character of our reference mark is killed without
     warning.
   - related: (b) feature: no citing within protected ranges

   - (a) needs: check content of protected ranges for stuff that
     we might not want to remove.
     - plain text: we will not be able to decide
     - anchors: we should move these out of the protected ranges
       - there may be references in those anchored things,
         and we would get confused by their removal
       - also, the user may become upset if we throw away these
     - Alternatively: if we could get LO to protect our ranges for
       us... But how?

   - (b) as long as the only way to cite is via clicking "Cite",
     we can check if the cursor is in a protected part.
     - But with e.g. "textual representation" (like "\cite{key}"),
       the user can insert citations without starting JabRef,
       and can do this in the middle of an existing citation.

   Summary: the main options seem to be:

   - Make our protected ranges protected by LO (how?)
     - Note: protected in the sense that their content should not be changed.
       We allow deletion, move, copy (if we can).
   - Check the content of citation marks for stuff that may have been
     inserted there while we were not watching.

   - [[Question: can we make LO to protect our ranges?]]
   - [[Question: can we check if an XTextRange contains an anchor?]]
.
** Question: "(Cited on pages: 1)"

   - currently "Cited on pages" is in Localization.lang.
     - In case its use is extended to resolved citations,
       the format should probably move to the style.
       - Or somewhere else?

** feature: link from citation to bibliography

   - problem: needs support from OOBibStyle
     - "[1-7]" : link to "[1]"
     - "[Smith 2001a-c]" : link to "Smith 2001a"
     - "[Smith 2001; Jones 2002]" we do not want to parse these in
       OOBibBase, so probably OOBibStyle should tell us about the available parts.

   - hyperlink in a reference mark (or bookmark)? Seems doable. Needs bookmarks for
     individual entries in the bibliography.
.
** feature: better overview and navigation for unresolved references 

   - Currently:
     - in text, AuthorYear shows Unresolved(key),
       Numbered shows [n]
     - in bibliography
       - AuthorYear brings Unresolved(key) forward
       - Numbered/FirstAppearance keeps them between the others
       - Both: provide "(Cited on pages: 1)" links.

     - Best strategy for the user: find "Unresolved(key)" in
       bibliography and either find a database providing the key,
       or follow the provided links to remove the in-text citations.

       - The step "follow the provided links" seems problematic:

         - user leaves the location where the links are collected

           - (a) Maybe hyperlink with "Open in new window?"
             - No, "_blank" has no effect within LO
             - No, filling "Document path" with the location of current document
               does not open a new window either.
               - Seems to work when we start from a different
                 document, though.
                 - We could create a new doc with links to locations
                   (bookmarks, not refmarks) in the original.

           - (b) Some kind of java dialog?
             - good: calls back to JabRef, so we could offer
               "visit citation" and "remove all citations to this source".
               Maybe even "locate this key in known bib sources"

           - (c) Well, there is a "Back" button in LO, so getting back to
             the list in the bibliography is not that hard.
             - Users may need education (mention in the doc), because
               following internal links within an ODT and then going
               back is probably not common. (At least I did not think
               about it at first)
             - But of course JabRef/[Refresh] will rebuild the bibliography,
               which raises the question: "Back to where?"

** TODO separate responsibilites

- clarify what belongs to
  - the storage backend
  - style
  - (anything else?)

** combineCiteMarkers: with a numbered style, the user has no visual clue

   With a numbered style, the user has no visual clue to distinguish
   AUTHORYEAR_PAR and AUTHORYEAR_INTEXT. It may be confusing why
   we do not "Merge" when they are mixed.

** combineCiteMarkers / unCombineCiteMarkers (aka Merge/Separate)

The reason for implementing unCombineCiteMarkers (Separate citations)
was to be able to add/remove citations to the group.

- we will move pageInfo to the citations, but still there is the question
  of a group prefix (some text within the parentheses, before the citations)

  - What we really need is the ability to add/remove/reorder citations within
    a group.
    - This could be done with a textual representation,
    - and maybe we could provide "Open group"/"Close group" for editing
      without losing the groups identity (and attached data)

    - Instead of trying to be clever and decide how to merge pageInfo,
      we could just warn the user about duplicate keys in a group and
      let him decide the appropriate action. For this we need editable
      presentation of pageInfo.
.
** bug: backwordCompatibility OO_storage_v001

   OO_storage_v001 (representation of citations in JabRef 5.2)
   - find location of citation groups: by reference marks
     - the location marked for a citation mark contains the citation mark only (no brackets)
     - citation mark fill-in:
       - recreates the reference mark, but avoids adding space after
         - consequence: change of character format before (or after) the marker can flow into
           the citation marker (inherit-from-left or inherit-from-right-at-paragraph-start)
           - Note: if the citation marker alredy has direct formatting
             (of e.g. highlight color), then that feature does not
             flow into it: probably the empty cursor remaining after
             deletion remembers the direct formatting and keeps those.
             At the same time other direct formatting features
             (e.g. font color) do flow in and override defaults.

   - citation keys: encoded in reference mark name
   - citation type: encoded in reference mark name
   - pageInfo :
     - one pageInfo per citation group
     - store: in CustomProperties LO:[File]/[Properties]/[Custom Properties]
       - name: same as reference mark
     - merge: leaves pageInfo around.
       - Bug: New citation may pick up one of these.
   - Bibliography:
     - JabRef 5.2 creates XTextSection "JR_bib" and bookmark
       "JR_bib_end". On refresh, looks for XTextSection "JR_bib",
       creates cursor for the whole section,

   OO_storage_v002: changes since OO_storage_v001

     - the location marked for a citation mark contains the citation
       mark, and if it is shorter than 2 characters, left bracket; or
       if it is empty, left and right brackets. The left and right
       brackets are zero-width spaces at the start or end of the
       citation marker, respectively.
       - Note: 1-character content *can* happen if using numbered citations
         without parentheses (e.g. in superscripts).
       - If the user leaves less than two characters of the citation
         mark (without destroying the reference mark), the reference
         mark is recreated at the same location, otherwise it is reused.
       - [X] for OO_storage_v001 compat mode, we need a bracketless version
         - added alwaysRemoveBrackets=true to cleanFillCursorForCitationGroup
.
** feature: overview Unresolved


** "Cite in-text" with multiple entries                   :group_and_ungroup:

   - inserts "Au (2000); Bu (2001)"
   - Separate works, but modifies from in-text to in-paren: "(Au 2000) (Bu 2001)"

** unCombineCiteMarkers: formatting space inserted between citations :group_and_ungroup:

   Note: insertEntry inserts merged, so this question is not applicable there.

   [[file:OOBibBase.java::/space between citation markers: what style/]]

   - style.getCitationCharacterFormat(); should not be applied to
     these spaces.

   [[file:OOBibBase.java::/insertReferenceMark(/]]

   - c.f. behaviour of insertEntry with multiple entries
     - A: Not applicable to spaces between: it inserts merged citations.
     - The space inserted after:

     - Test
       - Select a style that prescribes a character format,
          e.g. "JR_citation". This format has to be alreaady known by LO.
       - write "aaabbb"
         - format it Bold, set character style Emphasis
         - select two entries in database
         - click Cite
       - Result
         - citation marker
           - inherits Bold
           - character style is set to JR_citation
         - space after
           - Bold, with character style "Emphasis"
         - insert "c" after the space
           - Bold, Emphasis

     - Same with "Cite in-text"
       - citation marker: Bold, JR_citation
       - space after:
         - Bold (inherit direct format)
         - character style JR_citation (according to sidebar)
           - but does not look like it: border and highlighting fro JR_citation
             is not visible
         - it is also Italic (according to the toolbar)
       - "c" after space: Bold, not Italic, JR_citation (and looks like it)
       - This is probably not what we wanted.

*** what is the expected behaviour?

     - inherit direct formatting from the left
       - Why? We do not want the citation stand out unless
         the user (actually, the style) asks for it.
       - Q: may need care when filling in during refresh.
     - apply the style to the citation marker without affecting
       the surroundings
.
** Bug: character style applied by one style is left in place

   - Test
     - Select a style prescribing a character style (e.g. JR_citation)
     - refresh: the style is applied
     - Select another style, that does not prescribe a character style.
     - refresh: the style is left in place.

** combineCiteMarkers same key different pageInfo :group_and_ungroup:

   [[file:OOBibBase.java::/combineCiteMarkers: merging for same citation keys]]

   combineCiteMarkers: merging for same citation keys,
   but different pageInfo looses information.

   - because we drop duplicate keys by parseRefMarkNameToUniqueCitationKeys
   - Needs: getCitationMarker, getNumCitationMarker support
     for multiple pageInfo (either with list of pageInfo, or repeated keys)
     - However, it will be hard to handle intelligently:
       we do not even know that they contain page numbers.
       - What should we do with partially overlapping page ranges?
       - How to handle text comments?
       - Probably the best we could do is to ask the user.
         Then we have a problem again: either we remember
         his choice (even after an unCombineCiteMarkers),
         or ask again.

     - Probably should change unCombineCiteMarkers to work on some
       selected citation group, not on all at once.

     - Maybe do the same with "Merge citations"

** combineCiteMarkers / Merge walk into next mark :group_and_ungroup:

   [[file:OOBibBase.java::/If there is no space between the two reference marks/]]

   - consequence: with no space between, citations are not merged

** Bug: consecutive citations in footnotes

The 2nd of two consecutive citations is missed in footnotes by updateDocumentActionHelper

Situation:

- place to citations in a footnote, separated by a space
- change style (to numbered)
- press the refresh button

The 1st citation is updated, but not the 2nd


** generateDatabase broken logic

   [[file:OOBibBase.java::/we just created resultDatabase/]]

   Testing fresh, empty database for content.

** combineCiteMarkers in footnotes

Earlier note: "combineCiteMarkers does not work with citations in footnotes"

Note:
   - citations in footnotes
     - [X] can be inserted and
     - [X] they appear in the bibliography.
     - [X] They are also updated on style change+refresh
     - [ ] Merge fails (does not merge).

           - This may be because for visual ordering rerefence mark
             ranges in footnotes are replaced by the
             footnotemark. Since they appear at the same position,
             visual ordering may leave them in arbitrary order.

             If this is the cause, introducing indexInPosition should
             fix it. (not tested yet)

     - [ ] "Separate" (on merged citations inserted by
            selecting multiple entries then "Cite")
            May leave some of the two citation marks with text "tmp".
            This can be corrected by a few repetitions of pressing the "refresh"
            button.

  - citations in tables (text tables)
    - [X] can be inserted
    - [X] they appear in bibliography
    - [X] they are updated on style change+refresh
    - [X] Merge (combineCiteMarkers) works
    - [X] Separate (unCombineCiteMarkers) works

** Bug: no database mess

If the corresponding bib file is not open, Separate (unCombineCiteMarkers) (or Merge?)
leaves a mess: (1) reference marks with "tmp" in the text (2) with
reference mark name "JR_cite_1_", i.e. without citation key.

** Bug: populateBibTextSection blindly adds bookmark

At the end of populateBibTextSection,
we add a bookmark without removing
the one that already exists.

LO autorenames our new bookmark.

We should check and remove the old one first.

        // TODO: Do not insert Bookmark without testing if it already
        //       exists. LibreOffice creates "JR_bib_end1" instead of "JR_bib_end",
        //       or rather "JR_bib_endN"  where N may increase.
        //       Repeatedly pressing "Refresh" leaves "JR_bib_end" at the start
        //       of the bibliography.

ref: file:OOBibBase.java::/OOBibBase.BIB_SECTION_END_NAME/

Also: we should mark the end of the bibliography at creation.
populateBibTextSection should only fill the gaps.

** Refactor: separate storage and presentation operations :storage_separation:

   I mean, creating a marker and filling its inside
   are separate jobs. The latter should not affect
   the surrounding text.

   - applyNewCitationMarkers should not modifiy storage (i.e. call
     insertReferenceMark)

   - also: applyNewCitationMarkers should not mess with the bibliography.

** Refactor: pageInfo dataflow

   - Insert pageInfo into citation markers on creation, not when
     inserting.

     Consider moving pageInfo stuff to citation marker
     generation. May need to modify

     -  getCitationMarker,
        at ./jabref/src/main/java/org/jabref/logic/openoffice/OOBibStyle.java:492:
     - getNumCitationMarker ?
     - OOBibBase.insertReferenceMark
     - See also: [[Bug: multiple "et al." strings]]

** Bug: multiple "et al." strings

   The "et al." parts of citation markers are italicized
   in OOBibBase.insertReferenceMark
   [[file:OOBibBase.java::/style.getBooleanCitProperty(OOBibStyle.ITALIC_ET_AL)/]]

   - Multiple citations, thus multiple "et al." strings
     may appear in a citation marker.
     - Bug: only the first is italicized.

   - Refactor: it would be more natural to italicize
     when the citation marker is created.
     For that, we should create citation markers with html markup
     - OOBibStyle.getCitationMarker
       [[file:../../logic/openoffice/OOBibStyle.java::/getCitationMarker(/]]
     - OOBibStyle.getNumCitationMarker
       file:../../logic/openoffice/OOBibStyle.java::/getNumCitationMarker/
     and reuse part of file:../../logic/openoffice/OOUtil.java::/insertOOFormattedTextAtCurrentLocation/

   - If done, may obsolete OOBibStyle.ITALIC_ET_AL,
     since we can just put "<i>et al.</i>" into ET_AL_STRING


** Bug: Find and resolve overlapping citation groups

Potential attacks:

- Find overlapping ranges,
  try to modify them so that they do not overlap.

  Need to consider
  - citation-citation overlap
  - footnote-marks overlapping with citations.
  - I hope, LO already resolves footnoteMark-footnoteMark overlaps.

** Bug: insertEntry in bibliography

This could be resolved by extending overlap checks to bibliography.

TODO: inserting a reference in the "References" section
provokes an "Unknown Source" exception here,
[[file:OOBibBase.java::/insertEntry in bibliography/]]
because
position was deleted by rebuildBibTextSection()

at com.sun.proxy.$Proxy44.gotoRange(Unknown Source)
at org.jabref@100.0.0/org.jabref.gui.openoffice
     .OOBibBase.insertEntry(OOBibBase.java:609)

Idea: Maybe we should refuse to insert in places to be
      overwritten: bibliography, reference marks.

      Needs: (preferably accurate) knowledge of the forbidden ranges.
      Limitation: the user can still Cut and Paste to these parts.
                  Q: Can we make them readonly inside, while allowing
                     to move them around as a unit?

** Could we use TextUserDefinedAttributes to store pageInfo?        :storage:

  https://www.openoffice.org/api/docs/common/ref/com/sun/star/style/CharacterProperties.html#TextUserDefinedAttributes

  This property stores XML attributes. They will be saved to and restored from automatic styles inside XML files.

  - https://www.openoffice.org/api/docs/common/ref/com/sun/star/xml/UserDefinedAttributesSupplier.html
  - https://www.openoffice.org/api/docs/common/ref/com/sun/star/xml/AttributeData.html


** Feature: Behaviour of Merge on itcType                           :storage:

   - itcType: citep,citet,nocite
   - We store a single itcType for a citation group.
     - Probably Merge should only merge series of citep variants.

       [[file:OOBibBase.java::/We probably only want to collect citations with/]]

     - in unCombineCiteMarkers:
       [[file:OOBibBase.java::/withText should be itcType != OOBibBase.INVISIBLE_CIT/]]
       This would probably resolved by the above change.

** Feature: pageInfo and Merged citations                           :storage:

   - pageInfo is stored for individual citations
     - its key includes the unique number generated by getUniqueReferenceMarkName
     - Merge destroys these unique numbers, so we lose the connection.

   - Proposed change was: https://github.com/JabRef/jabref/pull/7455

     - A solution could be to encode the number making the originals
       unique in the merged name: in stead of
       "JR_cite_1_XX2000a,YY2010" it would be e.g.
       "JR_cite_1_XX2000a,1_YY2010".

     - Apart from
       - construction and
       - parsing,
       - probably marking (or calculating) the originals as "in use" for
         getUniqueReferenceMarkName() would be needed.

    - file:OOBibBase.java::/getUniqueReferenceMarkName/
    - file:OOBibBase.java::/parseRefMarkName\b/
    - file:OOBibBase.java::/parseRefMarkNameToUniqueCitationKeys/

*** Feature: cleanup unused pageInfo entries                        :storage:

    After we can correctly recognize all pageInfo entries
    refered to, we can remove the unused ones.
    - Note: (Ctrl-X Ctrl-V refresh) will differ from (Ctrl-X refresh
      Ctrl-V), because in the latter, refresh removes the pageInfo
      (unless we check the copy-paste buffer)

    - Interaction with Redlines?

    - If not careful, file:OOBibBase.java::/\binsertEntry\b/
      may pick up a pageInfo left around when pageInfo is null.


** Feature: notify GUI on document close, LO close

- Gray out buttons that are not usable without connection.

- On the OO side we could install an event handler for document
  close: addCloseListener

  Reference: [[https://www.openoffice.org/api/docs/common/ref/com/sun/star/util/XCloseBroadcaster.html#addCloseListener][(OO-API:addCloseListener)]]

- On the GUI side: events [[https://jabref.readthedocs.io/en/latest/getting-into-the-code/code-howtos/#event-handling-in-jabref][Event handling in JabRef]]

** Feature: ManageCitationsDialog visual cue on editable parts
   - the pageInfo part is editable, but no visual cue is provided

** Feature: ManageCitationsDialog order                   :orderOfAppearance:

   In the "Manage citations" dialog visual or alphabetic order could
   be more manageable for the user.

   We could provide these from getCitationEntries, but switching
   between them needs change on GUI (adding a toggle or selector).

   file:OOBibBase.java::/getCitationEntries/

- OOBibBase.getCitationEntries Collects List<CitationEntry>
  - What else CitationEntry is used for?

- Probably:
  - extend CitationEntry with fields
    - visualOrderIndex
    - alphabeticIndex (could be bound to "Citation" column sort in dialog)

      These are similar to citation numbering, but
      repeated citations of the same source are kept.

** Feature: scrollToCitation

For "Manage citations" and problem reports it could be useful to provide
a link or button that moves LO cursor to the citation referred to.

** Feature: self-contained odt-jabref

   Authors send manuscripts around for review.

   Currently (apart from instructions to "install JabRef"),
   they would also need to send
   - style file, (or url for one?)
   - .bib or access to shared SQL database
   - Person on the other end has to configure these
     (open .bib, select style)

   If we could embed .bib and style, and access them
   on the other end, it would make it easier.

** Wish: Copy-paste citations                                       :storage:

    Copy-paste does not work for citations

Situation
- insert a citation
- copy-paste it to another location
- change style
- refresh

The copy is not updated. It is not a recognized citation anymore.

Requires change of storage.


*** Interestingly, Cut-and-paste preserves citations.

It will also pick up pageInfo after the paste, since the name of the
reference mark is preserved. This, however will cease to work if we
decide to clean up unused pageInfo entries in GUI actions and the user
calls to us.

On the other hand, if we do not clean them up, we should be careful
in "Cite" to avoid reusing not only names of reference marks, but also
names of pageInfo entries.

*** Design problem: Stable names are not compatible with Copy-paste

We use reference mark names to identify the citation groups.

In LO,
- Copy-paste of a **reference marked** text places no reference mark
  on the copy.

- Copy-paste of a **bookmarked** region creates a new bookmark, with a
  different name. Could be better.

- **Comments** have no name. Can be moved and copied.

- Other possibilities? (Markup in hidden text?)


** Bibliography:

*** Section or bookmark?

    - In applyNewCitationMarkers we use a *bookmark*.
    - I think we used a *section* for the bibliography elsewhere.
    - Relation?

- applyNewCitationMarkers:
  - looks for: Bookmark
    - creates: paragraph + Bookmark
  - createBibTextSection2:
    - creates: paragraph + Section
  - clearBibTextSectionContent2:
    - looks for: Section, calls createBibTextSection2
    - sets to "": Section
  - populateBibTextSection:
    - looks for: Section
    - inserts Bookmark BIB_SECTION_END_NAME
      after the body.

*** Does it need a section?

Currently we create a Section ("JR_bib", child of the section "text")
for the bibliography.

- This might be handy, if a change of page style for the bibliography
  is intended. But probably it is not always wanted.

- If the user removes the section: the text of the bibliography
  remains intact, but the connection is lost: the next refresh will
  create a new bibliography.

- Saving in LO to docx, then opening the result: the section name
  "JR_bib" is lost (renamed to e.g. "Section1")

Suggestion:

- Use bookmark instead of section. Seems to survive better, and does
  not force the document layout.

*** yield header to user

Currently the title of the Bibliography is deleted and recreated on
each refresh.

- If user wants a different title or paragraph style,
  we overwrite his changes, forcing him to edit the style.

- This could be avoided if after the initial creation of the
  bibliography we only changed the body of the bibliography.

  - In case the user deletes our bibliography markers (probably one or
    two bookmarks around the body) we will create the head again (not
    knowing that it is already there)

*** Possibilities (not settled, seems overcomplicated)

    - BibliographySection:
      - REQUIRED   [Currently] Must have, recreate if missing.
                   Problem: docx survival.
      - ON_CREATE  Create if Bibliography is missing, otherwise do not care.
                   We need to use other means to find the Bibliography body.
      - NONE       No section created or used.

    - BibliographyHeader (title)
      - ON_REFRESH We need to locate it:
        - [Currently] Based on section, if that is required
        - otherwise: Make it part of the body
      - ON_CREATE Write it when the Bibliography is created, otherwise
        just forget it. Not part of the body.


    - Proposed solution?

    - BibliographySection:

      - ON_CREATE  Create if Bibliography is missing, otherwise do not care.
                   We need to use other means to find the Bibliography body.
      - NONE       No section created or used.

    - BibliographyHeader (title)
      - ON_REFRESH We need to locate it:
        - [Currently] Based on section, if that is required
        - otherwise: Make it part of the body
      - ON_CREATE Write it when the Bibliography is created, otherwise
        just forget it. Not part of the body.

    - BibliographyBody:

      

      Offer: Section named "Bibliography" not found.
             I do not need it, but can create one at the end.
             Shall I?
             [Create] [No]
             Or: Bibliography section found.
             ------------
             Bibliography header (bookmark:
             JABREF_BIBLIOGRAPHY_HEADER_NAME="JR_bib_head"
             )
             --
             Autoupdate Bibliography header from style?
      - "Yes, always"
      - "No, let me handle the header"
      - "Create it if it does not exist, otherwise leave it to me"

      Biliography header
      - found.
      - not found
        - (I do not need it)
        - (but I need it)
      Create the bibliography header?
      Where: [Start of Bibliography section|End of document|Above BIBLIOGRAPHY_BODY_NAME]
      [Create] [No]
      ------------
      Bibliography body (bookmark: BIBLIOGRAPHY_BODY_NAME="JR_bib_body")
      found.
      Not found:
      Create it?
      Where: [After BIBLIOGRAPHY_HEADER_NAME|End of document|At the cursor]
      ------------

      Settings:
      - Create Bibliography Section: Yes | No | Ask
      - Bibliography header: SyncFromStyle | CreateFromStyle | No

      ------
      Logic:
      Locate Section,Head,Body
      - Have it all: OK
      - Section missing: OK
      - Head missing (and we handle it)
        - If we have a Body, insert above
        - If we have a Section, insert at its top
        - Insert at the End
      - Body missing
        - If we have a Head, insert below
        - If we have a Section, insert at its bottom
        - Insert at the End
      -----

** Design questions

Wished features

- Reliability
  - Do not lose citations
  - Do not overwrite user input
  - Minimize data loss

- Edit
  - Copy-paste text with citations
  - Change citation type (inpara/intext/nocite) without delete-reinsert

- Survive conversion to docx and back

- Better interaction with LO [Edit]/[Track changes]/[Record]

  - Reference marks to deleted-but-notYetAccepted parts
    (also known as [[https://wiki.openoffice.org/wiki/Documentation/DevGuide/Text/Redline][OO-Wiki:RedLine]])
    cause a refresh to reinstate the conceptually deleted citations.

*** How do others work?

- https://docs.jabref.org/cite/openofficeintegration

  - Note: JabRef does not use OpenOffice's built-in bibliography
    system, because of the limitations of that system. A document
    containing citations inserted from JabRef will not generally be
    compatible with other reference managers such as *Bibus* and *Zotero*.

- https://docs.jabref.org/cite/openofficeintegration#known-issues

  - Make sure to save your Writer document in OpenDocument format
    (odt). *Saving to Word format will lose your reference marks.*

    - Otherwise try to use the external tool
      [[https://github.com/teertinker/JabRef_LibreOffice_Converter][JabRef LibreOffice Converter]].
      This LibreOffice extension converts the reference
      marks to code that can be saved.

**** Zotero

     Zotero asks: (in LO)
     ---------------------------------------------
     Store citation as:

     - ReferenceMarks (recommended)
       ReferenceMarks cannot be shared with Word.
       The document must be saved as .odt.

     - Bookmarks
       Bookmarks can be shared between Word and LibreOffice,
       but may cause errors if accidentally modified
       and cannot be inserted in footnotes.
       The document must be saved as .doc or .docx
     ---------------------------------------------

     - BookmarkInFootnote:
       - LO 6.4.6.2 does allow bookmark in footnote.

     - "Accidentally modified bookmarks"
       - Q: Why are they more likely or worse then accidentally modified
         reference marks?

     - docx survival:

       - [[https://www.zotero.org/support/kb/moving_documents_between_word_processors][Zotero: moving between word processors]]

         Seems to involve dumping all data at hand as text into the document.

      - What breaks?

        [[https://www.zotero.org/support/kb/debugging_broken_documents][Zotero: Debugging broken documents]]

        - "Track Changes" is problematic
        - Citations in image captions. Zotero won't let you insert
          them, can cause problem.
        - While debugging, if you are using Fields mode in Word or
          Reference Marks mode in LibreOffice, it may help to display
          field codes rather than formatted text. To do this, press
          Alt/Option-F9 (or Alt/Option-Fn-F9) in Word or Ctrl-F9 in
          LibreOffice.

**** Bibus

-  [[https://wiki.openoffice.org/wiki/Bibliographic_Software_and_Standards_Information#Bibus][Bibus on OO-Wiki]]
-  [[http://bibus-biblio.sourceforge.net/wiki/index.php/Main_Page][Bibus on Sourceforge]]
- Maybe dead

**** Others

  https://wiki.openoffice.org/wiki/Bibliographic_Software_and_Standards_Information#Bibus


** Bug: "Meg{\'{\i}}as" in author name becomes "Megas" in citation marker and Bibliography

- But "Guly{\'{a}}s" works,  becomes "Gulyás"

.
** Feature: connect LO extension to JabRef

Some operations, for example "Merge citations", "Separate citations",
and probably "Edit pageInfo" do not really need the full JabRef window.

It would be more convenient to do these from within LO.  On the other
hand, for consistent behaviour it is probably better to use the same
code.

.
** Bug: "Cite special" cites on Cancel

   - should show default citation type
   - "[Cancel]" should not cite
.

* Closed

** DONE Bug: when "[Settings]/[Automatically sync...]" is off, the placeholders may be confusing

- In numbered style the placeholder is "-". This is inserted in OOBibBase.insertEntry.
- Otherwise "" (empty).  This suggests that the call to style.getCitationMarker()
  returned empty string. Or withText is false there.

Resolved: improve-reversibility branch: commit e159a1d8ce40d1045e73d7fbfca24390bba44706

.

** DONE Separation of createReferenceMarkForCitationGroup and fillCitationMarkInCursor
** DONE Feature: Undo in LO

   Wrap modifications during a GUI action into
   Undo blocks. If possible.

   [[https://www.openoffice.org/api/docs/common/ref/com/sun/star/document/XUndoManager.html][OO-API:XUndoManager]]
   [[https://www.openoffice.org/api/docs/common/ref/com/sun/star/document/XUndoManagerSupplier.html#getUndoManager][OO-API:XUndoManagerSupplier]]
.
** DONE Refactor: pass around jabRefReferenceMarkNamesSortedByPosition

   - Currently it is hard to follow if it is up-to-date or not.

   - file:OOBibBase.java::/updateSortedReferenceMarks/
   - file:OOBibBase.java::/getJabRefReferenceMarkNamesSortedByPosition/
   - file:OOBibBase.java::/jabRefReferenceMarkNamesSortedByPosition/

   - in refreshCiteMarkersInternal we take
     - referenceMarkNames = jabRefReferenceMarkNamesSortedByPosition;
     - then call findCitedKeys, implicitly listing the same
       reference marks.
.
** DONE createReferenceMarkForCitationGroup corner cases

   - [X] just-after a citation marker
   - [X] at start-of-para just-before a citation marker
     - Solution: safeInsertSpaces

** DONE Problem: the model of cursor vs text in LO:

   - Cursor positions and boundaries of a textrange are between
     characters. Good.

   - When inserting text at a point, character properties
     are usually inherited from the left side of the cursor.

   - [X] (1) How to fill
     - Apparently we *cannot insert text into an empty range*. With a
       reference mark pointing to an empty range we either wrote the
       text BEFORE or AFTER the empty content in the mark.
       - We can however "absorb" text when creating the mark.

     - Solutions considered:
       - (was) recreate the mark instead of filling
       - (new) Ensure, that we bracket the content, and fill
          within that.
       - We either use a zero-width space (\u200b) or,
         for making the bracketing visible (debugging): "<>"

     - Resolved:
       - Reuse if possible, otherwise recreate
       - getFillCursorForCitationGroup provides bracketed cursor
       - cleanFillCursorForCitationGroup removes brackets

   - [X] (2) citation mark at the start or end of a paragraph
     - Similar to other character properties, (e.g. highlight color,
       font color)
       - when cursor is at the start, properties are copied from the right
       - when cursor is at the end, properties are copied from the left, the last character
       - For character properties, the new character can be
         reformatted, or reset to default by Ctrl-M.
       - For a reference mark or character style Ctrl-M does not help.
         - But can set the default character style after we inserted some characters.
         - After the old text setting character style on the cursor works.
         - At the start, it does not.
         - For reference marks I found nothing analogous.
     - Resolved:
       - use safeInsertSpaces to avoid overlap with surrounding reference marks
         - This even breaks up a reference mark we are inserting into,
           leaves text of citation marker after the cursor as plain text.
           - Easy to clean up by user. Later we might refuse to insert into.
.

** DONE Feature: give feedback "No entry to cite, please select some."
** DONE Refactor: distinguish storage order and presentation order  :storage:

   - combineCiteMarkers orders the merged entries by year (I am not
     sure why).  The original order is lost.
     - insertEntry calls sortBibEntryListForMulticite(entries, style);
     - Apparently this order is not changed when the style changes.
   - TODO: create presentation order when needed, not when storing

   - Resolved:
     - rewrote combineCiteMarkers
     - creating presentation order was already in place.
** DONE Bug: It is too easy to create overlapping citations (and hard to resolve by the user)

Situation
- insert a citation
- backspace
- insert another citation

In LO the text looks the same as in (insert,insert,remove-space-between),
but the reference markers now overlap. Probably the second citation
is embedded in the first, just before its end.

(User-level workaround: remove the second citation.)

Resolved: using safeInsertSpaces avoid creating overlapping citations this way.

.
** DONE bug: "Separate" with multiples citations in same footnote

java.lang.RuntimeException: CitationGroupsV001.setGlobalOrder: globalOrder.size() != citationGroups.size()

- resolved: createVisualSortInput numbered within locations, not in Text partitions

** DONE bug:  Numbered citation groups: show an extra "; " after the last number.

   No, that is the empty pageInfo added by "Manage citations"

   - location: [[file:OOBibBase.java::/Last minute editing.*page info/]]
.
** DONE bug: missing visual cursor?

ref:
- file:OOBibBase.java::1021
- file:OOBibBase.java::/XTextViewCursor/
- file:DocumentConnection.java::/XTextViewCursor/

*** How to provoke:

- Create a frame
- Select it, so that the 'anchor' icon is visible.
  - Now there is no cursor in the normal sense,
    it is on the frame (but not within)
- Click "Refresh"
  - viewCursor.getStart();  throws

   com.sun.star.uno.RuntimeException: no text selection

	at org.libreoffice.uno/com.sun.star.lib.uno.environments.remote.Job.remoteUnoRequestRaisedException(Job.java:158)
	at org.libreoffice.uno/com.sun.star.lib.uno.environments.remote.Job.execute(Job.java:122)
	at org.libreoffice.uno/com.sun.star.lib.uno.environments.remote.JobQueue.enter(JobQueue.java:312)
	at org.libreoffice.uno/com.sun.star.lib.uno.environments.remote.JobQueue.enter(JobQueue.java:281)
	at org.libreoffice.uno/com.sun.star.lib.uno.environments.remote.JavaThreadPool.enter(JavaThreadPool.java:81)
	at org.libreoffice.uno/com.sun.star.lib.uno.bridges.java_remote.java_remote_bridge.sendRequest(java_remote_bridge.java:619)
	at org.libreoffice.uno/com.sun.star.lib.uno.bridges.java_remote.ProxyFactory$Handler.request(ProxyFactory.java:145)
	at org.libreoffice.uno/com.sun.star.lib.uno.bridges.java_remote.ProxyFactory$Handler.invoke(ProxyFactory.java:129)

	at com.sun.proxy.$Proxy52.getStart(Unknown Source)

	at org.jabref@100.0.0/org.jabref.gui.openoffice.OOBibBase.visualSort(OOBibBase.java:1021)
	at org.jabref@100.0.0/org.jabref.gui.openoffice.OOBibBase.getVisuallySortedCitationGroupIDs(OOBibBase.java:1097)
	at org.jabref@100.0.0/org.jabref.gui.openoffice.OOBibBase.produceCitationMarkers(OOBibBase.java:2115)
	at org.jabref@100.0.0/org.jabref.gui.openoffice.OOBibBase.updateDocumentActionHelper(OOBibBase.java:3286)
	at org.jabref@100.0.0/org.jabref.gui.openoffice.OpenOfficePanel.lambda$initPanel$9(OpenOfficePanel.java:202)

*** Gave up on initialPos, but now

    findPositionOfTextRange(OOBibBase.java:792) throws:

    com.sun.star.uno.RuntimeException: no text selection
	at com.sun.star.lib.uno.environments.remote.Job.remoteUnoRequestRaisedException(Job.java:158) ~[libreoffice-7.1.0.jar:?]
	at com.sun.star.lib.uno.environments.remote.Job.execute(Job.java:122) ~[libreoffice-7.1.0.jar:?]
	at com.sun.star.lib.uno.environments.remote.JobQueue.enter(JobQueue.java:312) ~[libreoffice-7.1.0.jar:?]
	at com.sun.star.lib.uno.environments.remote.JobQueue.enter(JobQueue.java:281) ~[libreoffice-7.1.0.jar:?]
	at com.sun.star.lib.uno.environments.remote.JavaThreadPool.enter(JavaThreadPool.java:81) ~[libreoffice-7.1.0.jar:?]
	at com.sun.star.lib.uno.bridges.java_remote.java_remote_bridge.sendRequest(java_remote_bridge.java:619) ~[libreoffice-7.1.0.jar:?]
	at com.sun.star.lib.uno.bridges.java_remote.ProxyFactory$Handler.request(ProxyFactory.java:145) ~[libreoffice-7.1.0.jar:?]
	at com.sun.star.lib.uno.bridges.java_remote.ProxyFactory$Handler.invoke(ProxyFactory.java:129) ~[libreoffice-7.1.0.jar:?]

    at com.sun.proxy.$Proxy52.gotoRange(Unknown Source) ~[?:?]
	at org.jabref.gui.openoffice.OOBibBase.findPositionOfTextRange(OOBibBase.java:792) ~[JabRef-100.0.0.jar:?]
	at org.jabref.gui.openoffice.OOBibBase.visualSort(OOBibBase.java:1042) ~[JabRef-100.0.0.jar:?]
	at org.jabref.gui.openoffice.OOBibBase.getVisuallySortedCitationGroupIDs(OOBibBase.java:1109) ~[JabRef-100.0.0.jar:?]
	at org.jabref.gui.openoffice.OOBibBase.produceCitationMarkers(OOBibBase.java:2127) ~[JabRef-100.0.0.jar:?]
	at org.jabref.gui.openoffice.OOBibBase.updateDocumentActionHelper(OOBibBase.java:3298) ~[JabRef-100.0.0.jar:?]
	at org.jabref.gui.openoffice.OpenOfficePanel.lambda$initPanel$9(OpenOfficePanel.java:202) ~[JabRef-100.0.0.jar:?]

*** xxx

    Comment above https://docs.libreoffice.org/sw/html/unotxvw_8cxx_source.html#l00896

    The problem seems to be that some methods, (e.g. getEnd()) require "text selection",
    but we have some other kind.

*** Question: How to get a functional XTextViewCursor

In an .odt document:
- create a frame
- select the frame (click on it, so that the anchor is shown)
- At this point there is no visible text cursor, I see green rectangles on the corners
  and edges of the frame.

- Connect with UNO (only succeeded with LibreOffice), get an XTextViewCursor cursor
- cursor.isVisible() returns true
- try cursor.gotoRange(range, false);
- or  cursor.getStart()
  It throws: com.sun.star.uno.RuntimeException: no text selection

Comment above https://docs.libreoffice.org/sw/html/unotxvw_8cxx_source.html#l00896
seems to suggest that the problem is that I have a selection that is not the "text selection" kind.

The question is: is there a way to get an XTextViewCursor supporting
cursor.gotoRange(range, false); and
cursor.getPosition();
without asking the user to click somewhere else?

*** resolved; use XSelectionSupplier.getSelection and XSelectionSupplier.select

    - by using XSelectionSupplier.getSelection and XSelectionSupplier.select
      in visualSort() we can now get a functional visual cursor
      when the user selected a Frame or an Image. We can also restore
      the selection after.

    - remaining problem: when the cursor is in a comment (annotation),
      we get no selection, and the above does not work.
      - Current workaround: ask the user to move the cursor.
.
** DONE bug: refreshCiteMarkers destroys unresolved entries

   - When opening the wrong library, we get many unresolved entries.

     Click on "Refresh" will remove reference
     to some of the unresolved entries from the document.

   - resolved: I believe this has been solved during reorganization.

.
** DONE Bug: CitationGroups without intervening space

 May lose first of consecutive citations without intervening space

 Situation

 - place two individual citations in the text, remove the space separating them
 - press the refresh button

 The first of the two citations is lost.
** DONE feature: unresolved references are not thrown away

   - [X] Instead they appear in text and bibliography.

   - [X] For AuthorYear, they are sorted as first (both in text and
     bibliography) and shown as "Unresolved(citationKey)"

   - [X] In the bibliography, Unresolved(citationKey) is followed by
     "(Cited on pages: 1, 1)" where the page numbers a clickable
     crossreferences to to corresponding citation groups.

   - [ ] maybe we should use hyperlinks? That allows arbitrary label,
         but the target cannot be a reference mark (but can be a bookmark)
.


** DONE refactor: createCitationGroup

   Citation groups are created in
   - combineCiteMarkers
   - unCombineCiteMarkers
   - insertEntry

   Extract the common part, separate creation and fill-in

   - creation of reference mark name differs between
     combineCiteMarkers and insertEntry

     TODO: consistent handling of citation groups (merged citations).
     keyString generation differs from the one in combineCiteMarkers
     in OOBibBase.insertEntry we get A,,C for (A,B,C) where could not look up B
     In combineCiteMarkers we get A,C

     In both cases, we are throwing away unresolved citation keys silently.

   Resolved
   - combineCiteMarkers: calls insertReferenceMark
   - unCombineCiteMarkers: calls insertReferenceMark
   - insertCitation (renamed from insertEntry) calls insertReferenceMark
     - and does not sort the entries
** DONE bug: combineCiteMarkers problem: using visual order of appearance trips our solution

    using visual order of appearance trips our solution with
    two-column layout and also when viewing two pages side-by-side:
    When it believes the order is "A,B", textually B may be before A,
    or may appear in the same text (as in getText()) a page later.

    Possible solutions:
    - (1) Hack visualOrder: make a copy of the document, turn off
      two-column and two-pages-side-by-side.
      - But: changing layout to single column may change
        ordering relation to frames.

    - (2) For the purpose of combineCiteMarkers:
      - we can only group markers in the same getText part
      - within a getText part, textual order is perfect for us.

        Procedure:
        - getJabRefReferenceMarkNams
        - partition by getText
        - sort within partitions.
        - unlike citation numbering, here
          we do not need to decide where should
          footnotes to be "inserted" in the main text:
          we can just handle the partitions separately.

    As a *stopgap* we test for wrong textual order, and disable
    merging for pairs in the wrong order. Far-away, but correct order
    is already handled by checking only-spaces-between.

*** implement option (2)
    - sortRangesWithinGetTextPartitions 

*** resolved: combineCiteMarkers is now based on textual order

This makes it independent of visual order and its problems.

In particular, even though the numbers in a two-column layout
are still like

|12|34|
|56|78|

now (1256) and (3478) are considered as joinable groups.

