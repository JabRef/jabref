@startuml


package gui {
package bibtexparser {
  class ExtractBibtexDialog{
    {field} -Button buttonParse
    {field} -Button buttonParseToNewLib
    {field} -StateManager stateManager
    {field} -EntryByPlainTextViewModel textViewModel
    {field} -BibDatabaseContext database

    {method} +buttonParse.setOnAction --> textViewModel.startParsing();
    {method} +ExtractBibtexDialog()
    {method} -initialize()
    {method} +ViewLoader.view

  }
  class BibtextExtractorViewModel{
      {field} -BibDatabaseContext bibDatabaseContext
      {field} -StringProperty inputText
      {field} -BibEntry bibEntry
      {field} -BibDatabaseContext newDatabaseContext
      {field} -boolean directAdd
      {field} -List<BibEntry> extractedEntries
      {method} +startParsing(boolean directAdd)
      {method} +parsingFail()
      {method} -trackNewEntry(EntryType type)
      {method} +executeParse
      {method} +inputTextProperty



  }

  class ExtractBibtexDialog.fxml

  ExtractBibtexDialog *-- ExtractBibtexDialog.fxml
  ExtractBibtexDialog --> BibtextExtractorViewModel
  BibtextExtractorViewModel --> GrobidCitationFetcher

    }
   }







package logic{
  package plaintextparser{



  class GrobidCitationFetcherException{

  {method} +GrobidCitationFetcherException(String reason)


  }
   class GrobidCitationFetcher{

      {field} {static}  -Logger logger
      {field} {static}  -String GROBID_PROCESS_CITATIONS_URL
      {field} {static}  -HttpPostService grobidPostService
      {field} {static}  -BibEntry bibEntry

      {method} {static} +parsePlainRefCit(String plainText)
      {method} {static} +parseUsingGrobid(String plainText)
      {method} {static} +parseTeiToBib(String tei)
      {method} {static} -parseBibToBibEntry(String bibtexString)
  }
}

package net{

  class URLDOWNLOAD{


    {method}  +URLDOWNLOAD(String url)
    {method}  +setPostData(String params)
    {method}  +asString()

  }


}

package importer {
  package fileformat{
    package mods{
      class BibtexParser{
        {method} {static} +singleFromString(String bibtexString, ImportFormatPreferences importFormatPreferences, FileUpdateMonitor fileMonitor)
      }
    }
  }
}

}

GrobidCitationFetcher *-- BibtexParser
GrobidCitationFetcherException --- GrobidCitationFetcher


@enduml
