repositories {
    jcenter()
}

task localizationStatusVersion {
    new ByteArrayOutputStream().withStream { os ->
        def result = exec {
            commandLine "python3", "--version"
            standardOutput = os
        }
        if(!os.toString().startsWith("Python 3.") || Integer.parseInt(String.valueOf(os.toString().charAt(9))) < 6){
            throw new Exception("You need at least Python 3.6 to run syncLang, was: " +os.toString())
        }
    }
}

task localizationStatusWithMarkdown(dependsOn: localizationStatusVersion, type: Exec) {
    description "Creates an update file in Markdown"
    group = 'Localization'

    commandLine "python3", "scripts/syncLang.py", "markdown"
}

task localizationStatus(dependsOn: localizationStatusVersion, type: Exec) {
    description "Prints the current status"
    group = 'Localization'

    commandLine "python3", "scripts/syncLang.py", "status"
}

task localizationStatusExtended(dependsOn: localizationStatusVersion, type: Exec) {
    description "Prints the current status (extended output)"
    group = 'Localization'

    commandLine "python3", "scripts/syncLang.py", "status", "--extended"
}

task localizationUpdate(dependsOn: localizationStatusVersion, type: Exec) {
    description "Updates the localization files (fixes duplicates, adds missing keys, and sort them"
    group = 'Localization'

    commandLine "python3", "scripts/syncLang.py", "update"
}

task localizationUpdateExtended(dependsOn: localizationStatusVersion, type: Exec) {
    description "Updates the localization files (fixes duplicates, adds missing keys, and sort them (extended output)"
    group = 'Localization'
    commandLine "python3", "scripts/syncLang.py", "update", "--extended"
}
