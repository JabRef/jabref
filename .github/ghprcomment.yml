- jobName: Checkstyle
  message: >
    Your code currently does not meet [JabRef's code guidelines](https://devdocs.jabref.org/getting-into-the-code/guidelines-for-setting-up-a-local-workspace/intellij-13-code-style.html).
    We use [Checkstyle](https://checkstyle.sourceforge.io/) to identify issues.
    Please carefully follow [the setup guide for the codestyle](https://devdocs.jabref.org/getting-into-the-code/guidelines-for-setting-up-a-local-workspace/intellij-13-code-style.html).
    Afterwards, please [run checkstyle locally](https://devdocs.jabref.org/getting-into-the-code/guidelines-for-setting-up-a-local-workspace/intellij-13-code-style.html#run-checkstyle) and fix the issues.

    In case of issues with the import order, double check that you [activated Auto Import](https://devdocs.jabref.org/getting-into-the-code/guidelines-for-setting-up-a-local-workspace/intellij-13-code-style.html#enable-proper-import-cleanup).
    You can trigger fixing imports by pressing <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>O</kbd> to trigger [Optimize Imports](https://www.jetbrains.com/guide/tips/optimize-imports/).
- jobName: OpenRewrite
  message: >
    Your code currently does not meet JabRef's code guidelines.
    We use [OpenRewrite](https://docs.openrewrite.org/) to ensure "modern" Java coding practices.
    The issues found can be **automatically fixed**.
    Please execute the gradle task *`rewriteRun`*, check the results, commit, and push.

    You can check the detailed error output by navigating to your pull request, selecting the tab "Checks", section "Tests" (on the left), subsection "OpenRewrite".
- jobName: Modernizer
  message: >
    Your code currently does not meet JabRef's code guidelines.
    We use [Gradle Modernizer Plugin](https://github.com/andygoossens/gradle-modernizer-plugin#gradle-modernizer-plugin) to ensure "modern" Java coding practices.
    Please fix the detected errors, commit, and push.

    You can check the detailed error output by navigating to your pull request, selecting the tab "Checks", section "Tests" (on the left), subsection "Modernizer".
- jobName: Markdown
  message: >
    You modified Markdown (`*.md`) files and did not meet JabRef's rules for consistently formatted Markdown files.
    To ensure consistent styling, we have [markdown-lint](https://github.com/DavidAnson/markdownlint) in place.
    [Markdown lint's rules](https://github.com/DavidAnson/markdownlint/blob/main/doc/Rules.md#rules) help to keep our Markdown files consistent within this repository and consistent with the Markdown files outside here.

    You can check the detailed error output by navigating to your pull request, selecting the tab "Checks", section "Tests" (on the left), subsection "Markdown".
- jobName: CHANGELOG.md
  message: |
    While the PR was in progress, a new version of JabRef has been released.
    You have to merge `upstream/main` and move your entry in `CHANGELOG.md` up to the section `## [Unreleased]`.
- jobName: 'Unit tests'
  message: >
    JUnit tests are failing.
    In the area "Some checks were not successful", locate "Tests / Unit tests (pull_request)" and click on "Details".
    This brings you to the test output.

    You can then run these tests in IntelliJ to reproduce the failing tests locally.
    We offer a quick test running howto in the section [Final build system checks](https://devdocs.jabref.org/getting-into-the-code/guidelines-for-setting-up-a-local-workspace/intellij-12-build.html#final-build-system-checks) in our setup guide.
- jobName: no-force-push
  message: >
    Do not force-push!
    Force push is off limits and very bad style when working together on a project.
    ([Mainly because it is not supported well by GitHub istself.](https://github.com/orgs/community/discussions/3478))
    Commits will be lost, comments on commits will loose their context.
    This makes it harder to review.
    In the end, all commits will be [squashed](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/incorporating-changes-from-a-pull-request/about-pull-request-merges#squash-and-merge-your-commits) either way before being merged into the `main`` branch.
- jobName: move_issue
  message: |
    Your pull request needs to link an issue.

    To ease organizational workflows, please link this pull-request to the issue with syntax as described in <https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue>:

    > <h2 id="linking-a-pull-request-to-an-issue-using-a-keyword">Linking a pull request to an issue using a keyword</h2>
    > <p>You can link a pull request to an issue by using a supported keyword
    > in the pull request's description or in a commit message. The pull
    > request <strong>must be</strong> on the default branch.</p>
    > <ul>
    > <li>close</li>
    > <li>closes</li>
    > <li>closed</li>
    > <li>fix</li>
    > <li>fixes</li>
    > <li>fixed</li>
    > <li>resolve</li>
    > <li>resolves</li>
    > <li>resolved</li>
    > </ul>
    > <p>If you use a keyword to reference a pull request comment in another
    > pull request, the pull requests will be linked. Merging the referencing
    > pull request also closes the referenced pull request.</p>
    > <p>The syntax for closing keywords depends on whether the issue is in the same repository as the pull request.</p>

    ### Examples

    - ✅ `Fixes #xyz` links pull-request to issue. Merging the PR will close the issue.
    - ✅ `Fixes https://github.com/JabRef/jabref/issues/xyz` links pull-request to issue. Merging the PR will close the issue.
    - ✅ `Fixes https://github.com/Koppor/jabref/issues/xyz` links pull-request to issue. Merging the PR will close the issue.
    - ❌ `Fixes [#xyz](https://github.com/JabRef/jabref/issues/xyz)` links pull-request to issue. Merging the PR will **NOT** close the issue.
