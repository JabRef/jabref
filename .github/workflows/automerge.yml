name: Auto Merge
on: [pull_request_target, workflow_dispatch]

permissions:
  contents: write
  pull-requests: write

jobs:
  automerge:
    runs-on: ubuntu-latest
    if: github.repository == 'JabRef/jabref'
    steps:
      - name: Determine if job should run
        id: shouldrun
        shell: bash
        run: |
          actor="${{ github.actor }}"
          title="${{ github.event.pull_request.title }}"

          if [[ "$actor" == "renovate-bot" ]]; then
            echo "âœ… from renote-bot"
            echo "shouldrun=true" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          head_repo="${{ github.event.pull_request.head.repo.full_name }}"
          if [[ "$head_repo" != "JabRef/jabref" ]]; then
            echo "ðŸš« not from JabRef/jabref"
            echo "shouldrun=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          if [[ "$actor" == "dependabot[bot]" ]] || \
            [[ "$title" == "[Bot] "* ]] || \
            [[ "$title" == "Bump "* ]] || \
            [[ "$title" == "New Crowdin updates"* ]] || \
            [[ "$title" == "Update Gradle Wrapper from"* ]]; then
            echo "âœ… title OK"
            echo "shouldrun=true" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          LABELS=$(gh api repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/labels --jq '.[].name')
          if echo "$LABELS" | grep -q "^automerge"; then
            echo "âœ… label automerge"
            echo "shouldrun=true" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          echo "ðŸš« no automerge"
          echo "shouldrun=false" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{secrets.GH_TOKEN_JABREF_MACHINE_PR_APPROVE}}
      - name: Approve PR
        if: steps.shouldrun.outputs.shouldrun == 'true'
        run: gh pr review --approve "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GH_TOKEN: ${{secrets.GH_TOKEN_JABREF_MACHINE_PR_APPROVE}}
      - name: Merge PR
        if: steps.shouldrun.outputs.shouldrun == 'true'
        run: gh pr merge --auto --squash "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GH_TOKEN: ${{secrets.GH_TOKEN_UPDATE_GRADLE_WRAPPER}}
