name: Deployment

on:
  push:
    branches:
      - master
      - master-release
    paths-ignore:
      - 'docs/**'
      - 'src/test/**'
      - 'README.md'
  pull_request:
    paths-ignore:
      - 'docs/**'
      - 'src/test/**'
      - 'README.md'

env:
  SpringerNatureAPIKey: ${{ secrets.SpringerNatureAPIKey }}
  AstrophysicsDataSystemAPIKey: ${{ secrets.AstrophysicsDataSystemAPIKey }}
  IEEEAPIKey: ${{ secrets.IEEEAPIKey }}

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        include:
          - os: ubuntu-latest
            displayName: linux
            archivePortable: tar -c -C build/distribution JabRef | pigz --rsyncable > build/distribution/JabRef-portable_linux.tar.gz && rm -R build/distribution/JabRef
          - os: windows-latest
            displayName: windows
            archivePortable: 7z a -r build/distribution/JabRef-portable_windows.zip ./build/distribution/JabRef && rm -R build/distribution/JabRef
          - os: macOS-latest
            displayName: macOS
            archivePortable: brew install pigz && tar -c -C build/distribution JabRef.app | pigz --rsyncable > build/distribution/JabRef-portable_macos.tar.gz && rm -R build/distribution/JabRef.app

    runs-on: ${{ matrix.os }}
    name: Create installer and portable version for ${{ matrix.displayName }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v2
      - name: Fetch all history for all tags and branches
        run: git fetch --prune --unshallow
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.2
        with:
          versionSpec: '5.2.x'
      - name: Run GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 14
      - name: Restore gradle cache
        uses: actions/cache@master
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Build runtime image
        run: ./gradlew -PprojVersion="${{ steps.gitversion.outputs.AssemblySemVer }}" -PprojVersionInfo="${{ steps.gitversion.outputs.InformationalVersion }}" jlinkZip
      - name: Build installer
        run: ./gradlew -i -PprojVersion="${{ steps.gitversion.outputs.AssemblySemVer }}" -PprojVersionInfo="${{ steps.gitversion.outputs.InformationalVersion }}" jpackage
        shell: bash
      - name: Package application image
        run: ${{ matrix.archivePortable }}
        shell: bash
      - name: Rename files
        run: |
          get-childitem -Path build/distribution/*
          get-childitem -Path build/distribution/* | rename-item -NewName {$_.name -replace "${{ steps.gitversion.outputs.AssemblySemVer }}","${{ steps.gitversion.outputs.Major }}.${{ steps.gitversion.outputs.Minor }}"}
          get-childitem -Path build/distribution/* | rename-item -NewName {$_.name -replace "portable","${{ steps.gitversion.outputs.Major }}.${{ steps.gitversion.outputs.Minor }}-portable"}
        shell: pwsh
      - name: Upload to GitHub workflow artifacts store
        uses: actions/upload-artifact@master
        with:
          name: JabRef-${{ matrix.displayName }}
          path: build/distribution
  deploy:
    name: Deploy binaries on builds.jabref.org
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Check secrets presence
        id: checksecrets
        shell: bash
        run: |
          if [ "$BUILDJABREFPRIVATEKEY" == "" ]; then
            echo ::set-output name=secretspresent::false
          else
            echo ::set-output name=secretspresent::true
          fi
        env:
          BUILDJABREFPRIVATEKEY: ${{ secrets.buildJabRefPrivateKey }}
      - name: Checkout source
        uses: actions/checkout@v2
      - name: Fetch all history for all tags and branches
        run: git fetch --prune --unshallow
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.2
        with:
          versionSpec: '5.2.x'
      - name: Run GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.2
      - name: Get linux binaries
        uses: actions/download-artifact@master
        with:
          name: JabRef-linux
          path: build/distribution
      - name: Get windows binaries
        uses: actions/download-artifact@master
        with:
          name: JabRef-windows
          path: build/distribution
      - name: Get macOS binaries
        uses: actions/download-artifact@master
        with:
          name: JabRef-macOS
          path: build/distribution/
      - name: Deploy to builds.jabref.org
        id: deploy
        if: ${{ steps.checksecrets.outputs.secretspresent }}
        uses: Pendect/action-rsyncer@v1.1.0
        env:
          DEPLOY_KEY: ${{ secrets.buildJabRefPrivateKey }}
          BRANCH: ${{ steps.gitversion.outputs.branchName }}
        with:
          flags: -vaz --itemize-changes --stats --partial-dir=/tmp/partial --rsync-path="mkdir -p /var/www/builds.jabref.org/www/${{ steps.gitversion.outputs.branchName }} && rsync"
          options: ''
          ssh_options: '-p 9922'
          src: 'build/distribution/'
          dest: jrrsync@build-upload.jabref.org:/var/www/builds.jabref.org/www/${{ steps.gitversion.outputs.branchName }}/

