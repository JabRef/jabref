name: Tests

on: [push]

jobs:
  test:
    name: Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Shutdown Ubuntu MySQL
        run: sudo service mysql stop # Shutdown the Default MySQL, "sudo" is necessary, please not remove it
      - uses: mirromutth/mysql-action@v1.1
        with:
          host port: 3800
          container port: 3307
          character set server: 'utf8'
          collation server: 'utf8_general_ci'
          mysql version: '8.0'
          mysql database: 'jabref'
          mysql root password: 'root'
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 13
      - name: Set up test result helpers
        run: sudo apt-get install -qq -y --force-yes xml-twig-tools xsltproc
      - name: Checkout source
        uses: actions/checkout@v1
        with:
          depth: 1
          submodules: false
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.OS }}-gradle-${{ env.cache-name }}-
            ${{ runner.OS }}-gradle-
            ${{ runner.OS }}-
      - uses: actions/cache@v1
        name: Cache gradle wrapper
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
      - name: Run basic tests (without checkstyle)
        run: xvfb-run --auto-servernum ./gradlew check -x checkstyleJmh -x checkstyleMain -x checkstyleTest
      - name: Format failed test results
        if: failure()
        run: scripts/after-failure.sh
      - name: Run tests on PostgreSQL
        run: ./gradlew databaseTest
        env:
          DBMS: "postgresql"
      - name: Format failed test results
        if: failure()
        run: scripts/after-failure.sh
      - name: Run tests on MySQL
        run: ./gradlew databaseTest
        env:
          DBMS: "mysql"
      - name: Format failed test results
        if: failure()
        run: scripts/after-failure.sh
      - name: Update test coverage metrics
        run: xvfb-run --auto-servernum ./gradlew jacocoTestReport && bash <(curl -s https://codecov.io/bash);
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
          DBMS: "postgresql"
      - name: Run fetcher tests
        run: ./gradlew fetcherTest
      - name: Format failed test results
        if: failure()
        run: scripts/after-failure.sh
      - name: Run GUI tests
        run: xvfb-run --auto-servernum ./gradlew guiTest
      - name: Format failed test results
        if: failure()
        run: scripts/after-failure.sh
